// This file was generated by orangestack-cdk-openapi-lambda and all changes will be lost if you edit it

/**
 * Get the value of a key in an object with case insensitive match of key
 *
 * @param key Key to get value from obj
 * @param obj Object where key resides
 * @returns Value of key in object with case insensitive match of key
 */
const caseInsensitiveGet = <T>(key: string, obj: { [key: string]: T | undefined }): T | undefined => {
  const normalizedKey = key.toLowerCase()
  const keyToGet = Object.keys(obj).filter((objectKey) => objectKey.toLowerCase() === normalizedKey)
  if (keyToGet.length > 0) {
    return obj[keyToGet[0]]
  }
  return undefined
}

export default caseInsensitiveGet
